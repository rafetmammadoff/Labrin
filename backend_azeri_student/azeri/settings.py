"""
Django settings for azeri project.

Generated by 'django-admin startproject' using Django 1.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import raven
from django.utils.translation import ugettext_lazy as _

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "wbig_-ow3vx9ocbbq!==48zxht5exeh5!lxp5tv-da9le3(^c"
DEBUG_STATUS = False if os.environ.get('DEBUG') else True
if 'labmin' in BASE_DIR or 'seyidov' in BASE_DIR:
    DEBUG_STATUS = True
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = DEBUG_STATUS
PROD = not DEBUG

ALLOWED_HOSTS = ['*'] if PROD else ['*']

# Email configuration 
# change your custom smtp configuration
# EMAIL_HOST = 'smtp.yandex.ru'
# EMAIL_HOST_USER = 'student@labrin.net'
# EMAIL_HOST_PASSWORD = 'azeri123student!@'
# EMAIL_PORT = 465
# EMAIL_USE_TLS = False
# EMAIL_USE_SSL = True
# DEFAULT_FROM_EMAIL = "Azeristudent.az <%s>" % EMAIL_HOST_USER
SENDGRID_API_KEY = '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'

EMAIL_HOST = 'smtp.sendgrid.net'
EMAIL_HOST_USER = 'apikey' # always use this
EMAIL_HOST_PASSWORD = SENDGRID_API_KEY # sendgrid.com/settings/api_keys
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
DEFAULT_FROM_EMAIL = "Azeristudent.az" 
SENDGRID_SANDBOX_MODE_IN_DEBUG = False


# Application definition
# Locale translation files here
# LOCALE_PATHS = (
#     os.path.join(BASE_DIR, 'locale'),
# )
# If you have a custom user uncommend
AUTH_USER_MODEL = "base_user.MyUser"

# Default login required
# LOGIN_URL = '/accounts/login/'
# Application definition

import os
if os.name == 'nt':
    import platform
    OSGEO4W = r"C:\OSGeo4W"
    assert os.path.isdir(OSGEO4W), "Directory does not exist: " + OSGEO4W
    os.environ['OSGEO4W_ROOT'] = OSGEO4W
    os.environ['GDAL_DATA'] = OSGEO4W + r"\share\gdal"
    os.environ['PROJ_LIB'] = OSGEO4W + r"\share\proj"
    os.environ['PATH'] = OSGEO4W + r"\bin;" + os.environ['PATH']

GDAL_LIBRARY_PATH = r'C:\OSGeo4W\bin\gdal302'


INSTALLED_APPS = [
    'corsheaders',
    'admin_app',
    'jet.dashboard',  # Admin Dashboard
    'jet',  # New Admin panel
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.sitemaps',
    'rest_framework',
    'flatpages.apps.FlatPagesConfig',
    'raven.contrib.django.raven_compat',
    'mapwidgets',
    'social_core',  # Python Social auth
    'social_django',  # Django Social auth
    'celery',  # Don't forget to add celery
    'django_celery_results',  # celery result
    'django_celery_beat',
    'ckeditor',
    'ckeditor_uploader',
    'widget_tweaks',
    'base_user.apps.BaseUserConfig',
    # 'api.apps.ApiConfig',
    'email_system.apps.EmailSystemConfig',
    'student.apps.StudentConfig',
    'partners.apps.PartnersConfig',
    'crmstudent.apps.CrmstudentConfig',
    
]



REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly',
     
    ]
}

# Ckeditor config
CKEDITOR_JQUERY_URL = '//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js'
CKEDITOR_UPLOAD_PATH = "uploads/"

CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': None,
    },
}

# Google Map api key
MAP_WIDGETS = {
    "GOOGLE_MAP_API_KEY": "AIzaSyAIMV7F7cJwukyVCjKrwaVNV119Us1dCJw"
}

# SendGrid Api KEY
# SENDGRID_API_KEY = "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"
# SENDGRID_API_KEY = "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"

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'azeri.middleware.force_default_middleware.force_default_language_middleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'flatpages.middleware.FlatpageFallbackMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'social_django.middleware.SocialAuthExceptionMiddleware',  # if you want to social login uncomment this
    # 'app.middleware.game_session_middleware.game_check_session', # custom middleware
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
]


ROOT_URLCONF = 'azeri.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
CORS_ORIGIN_ALLOW_ALL = True 


# WSGI_APPLICATION = 'azeri.wsgi.application'

# Authentication backend
# If you have social login activate this
AUTHENTICATION_BACKENDS = (
    'social_core.backends.github.GithubOAuth2',
    'social_core.backends.twitter.TwitterOAuth',
    'social_core.backends.facebook.FacebookOAuth2',

    'django.contrib.auth.backends.ModelBackend',
)

SOCIAL_AUTH_PIPELINE = (
    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.social_auth.social_user',
    'social_core.pipeline.user.get_username',
    'social_core.pipeline.user.create_user',
    'social_core.pipeline.social_auth.associate_user',
    'social_core.pipeline.social_auth.load_extra_data',
    'social_core.pipeline.user.user_details',
    'social_core.pipeline.social_auth.associate_by_email',
    # 'app.pipeline.get_avatar', # custom pipeline
)

SOCIAL_AUTH_LOGIN_ERROR_URL = '/'
SOCIAL_AUTH_LOGIN_REDIRECT_URL = '/dashboard/'
SOCIAL_AUTH_FACEBOOK_KEY = '******************'  # App ID
SOCIAL_AUTH_FACEBOOK_SECRET = '****************************'  # App Secret
SOCIAL_AUTH_FACEBOOK_SCOPE = ['email']
SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {
    'fields': 'id,name,email',
}

# logout redirect url
LOGOUT_URL = 'logout'
LOGIN_REDIRECT_URL = '/dashboard/'
LOGIN_ERROR_URL = '/'

SITE_ID = 1

# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

# Celery backend result
CELERY_RESULT_BACKEND = 'django-db'

# if PROD:  # For production docker use
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': os.environ.get('POSTGRES_DB', 'student_db_name'),
        'USER': os.environ.get('POSTGRES_USER', 'student_db_user'),
        'PASSWORD': os.environ.get('POSTGRES_PASSWORD', 'YuC7LDrHu5PBPQyBSUeqgDAf8RN5H4cKvUmeGft55QhD3cQTyPbVXhYhR6ELzbjy'),
        'HOST': os.environ.get('POSTGRES_HOST', 'localhost'),
        'PORT': os.environ.get('POSTGRES_PORT', '5432'),
    }
}
# else:  # For localhost development
#     DATABASES = {
#         'default': {
#             'ENGINE': 'django.db.backends.postgresql_psycopg2',
#             'NAME': 'student_db_name',
#             'USER': 'student_db_user',
#             'PASSWORD': 'YuC7LDrHu5PBPQyBSUeqgDAf8RN5H4cKvUmeGft55QhD3cQTyPbVXhYhR6ELzbjy',
#             'HOST': 'localhost',
#             'PORT': '5432',
#         }
#     }


# if PROD:  # For production docker use
#     DATABASES = {
#         'default': {
#             'ENGINE': 'django.db.backends.postgresql_psycopg2',
#             'NAME': os.environ.get('POSTGRES_DB'),
#             'USER': os.environ.get('POSTGRES_USER'),
#             'PASSWORD': os.environ.get('POSTGRES_PASSWORD'),
#             'HOST': os.environ.get('POSTGRES_HOST'),
#             'PORT': os.environ.get('POSTGRES_PORT'),
#         }
#     }
# else:  # For localhost development
#     DATABASES = {
#         'default': {
#             'ENGINE': 'django.db.backends.postgresql_psycopg2',
#             'NAME': 'test',
#             'USER': 'postgres',
#             'PASSWORD': 'postgres',
#             'HOST': 'localhost',
#             'PORT': '5432',
#         }
#     }
    # DATABASES = {
    #     'default': {
    #         'ENGINE': 'django.db.backends.sqlite3',
    #         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    #     }
    # }

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'az'

TIME_ZONE = 'Asia/Dubai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
if PROD:
    STATIC_ROOT = os.path.join(BASE_DIR, "static")
else:
    STATICFILES_DIRS = [
        os.path.join(BASE_DIR, "static")
    ]

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

# ----------------------------
# ------------Logging.......

LOG_LEVEL = 'ERROR' if PROD else 'DEBUG'
LOGGING = {
    'version': 1,
    'disable_existing_loggers': not DEBUG,
    'formatters': {
        'standard': {
            'format': '%(asctime)s [%(levelname)s] %(name)s:=> %(message)s',
        },
        'focused': {
            'format': '\n----------------------\n%(asctime)s [%(levelname)s] %(name)s:=> %(message)s \n----------------------',
        },
    },
}

if PROD:  # Raven config only for Production
    RAVEN_CONFIG = {
        'dsn': 'https://b59255b234df4661aaac1680067c143b:d5b0e4e531c04b008f321cfe708bcec1@sentry.io/1271126'
    }

# GDAL_LIBRARY_PATH = r'C:\OSGeo4W\bin\gdal301.dll'
# GEOS_LIBRARY_PATH = r'C:\OSGeo4W\bin\geos_c.dll'

# related field open same page
X_FRAME_OPTIONS = "SAMEORIGIN"

DEFAULT_AUTO_FIELD='django.db.models.AutoField'

# GDAL_LIBRARY_PATH = r'C:\OSGeo4W\bin\gdal301.dll'
# GEOS_LIBRARY_PATH = r'C:\OSGeo4W\bin\geos_c.dll'